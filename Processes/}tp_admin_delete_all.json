{
    "Name": "}tp_admin_delete_all",
    "HasSecurityAccess": false,
    "PrologProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\n\r\n\r\ncControlPrefix = '';\r\nIf (pControl @= 'Y');\r\n\tcControlPrefix = '}';\r\nEndIf;\r\n\r\n#Release all data reservation acquired for the application\r\n#clear requires data reservation flag for  application cubes\r\n#remove all control dimension filter subsets\r\ncApplicationCubesCube = cControlPrefix | 'tp_application_cubes';\r\n\r\ntotalApplications = DIMSIZ(cControlPrefix | 'tp_applications');\r\nindexApplication = 0;\r\nWhile (indexApplication < totalApplications);\r\n\tcApplicationID = DIMNM(cControlPrefix | 'tp_applications', indexApplication+1);\r\n\r\n\t#**remove control subset filter\r\n\tvDimensions = '}Dimensions';\r\n\tvTotalDimensions = DIMSIZ(vDimensions);\r\n\tlooper = vTotalDimensions;\r\n\r\n\tWhile (looper >= 1);\r\n\t\tvDimension = DIMNM(vDimensions, looper);\r\n\t\tIF (SUBST(vDimension, 1,1) @<> '}');\r\n\t\t\tvSubset = 'tp_' | cApplicationID;\r\n\t\t\tIF (SubsetExists(vDimension, vSubset) >0);\r\n\t\t\t\tSubsetDestroy(vDimension, vSubset);\r\n\t\t\tEndif;\r\n\t\tEndif;\r\n\t\tlooper = looper -1;\r\n\tEnd;\r\n\t\r\n\t# remove existing reservations for the application\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_reserve_release_all', 'pExecutionId', pExecutionId, \r\n\t\t\t'pAppId', cApplicationID, 'pControl', pControl);\r\n\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\tProcessError;\r\n\tEndIf;\r\n\t\r\n\tcApprovalDIM = ATTRS(cControlPrefix | 'tp_applications', cApplicationID, 'ApprovalDimension');\r\n\tcCubePropertiesCube = '}CubeProperties';\r\n\tif (CubeExists(cApplicationCubesCube) <> 0);\r\n\t\ttotalCubes = DIMSIZ('}Cubes');\r\n\t\tindexCube = 0;\r\n\t\tWhile (indexCube < totalCubes);\r\n\t\t\tcCubeName = DIMNM('}Cubes', indexCube+1);\r\n\t\t\r\n\t\t\tcIsAppCube = CellGetS(cApplicationCubesCube, cApplicationID, cCubeName);\r\n\t\t\r\n\t\t\tIf ((cApprovalDIM @= '' & cIsAppCube @= 'Y') % cIsAppCube @= 'A');\r\n\t\t\t\t# clear the require reservation lag\r\n\t\t\t\tCellPutS('', cCubePropertiesCube, cCubeName, 'DATARESERVATIONMODE');\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tindexCube = indexCube + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\tindexApplication = indexApplication+1;\r\nEnd;\r\n\t\r\ncCubesDim = '}Cubes';\r\ncDimensionsDim = '}Dimensions';\r\ncClientsDim = '}Clients';\r\ncGroupsDim = '}Groups';\r\n\r\ncCubesDimSize = DIMSIZ(cCubesDim);\r\ncDimensionsDimSize = DIMSIZ(cDimensionsDim);\r\ncClientsDimSize = DIMSIZ(cClientsDim);\r\ncGroupsDimSize = DIMSIZ(cGroupsDim);\r\n\r\ncTpPrefix = cControlPrefix | 'tp_';\r\ncTpPrefixLength = LONG(cTpPrefix);\r\ncCellSecurityPrefix = '}CellSecurity_';\r\ncCellSecurityPrefixLength = LONG(cCellSecurityPrefix);\r\n\r\n#*** Destroy TP cubes\r\n\r\ncTpCubesDim = 'tptemp_cubes';\r\nDimensionDestroy(cTpCubesDim);\r\nDimensionCreate(cTpCubesDim);\r\n\r\nvIndex = 1;\r\nWhile (vIndex <= cCubesDimSize);\r\n\tvElement = DIMNM(cCubesDim, vIndex);\r\n\tvNamePrefix = SUBST(vElement, 1, cTpPrefixLength);\r\n\r\n\tIf (cTpPrefix @= vNamePrefix);\r\n\t\tDimensionElementInsert(cTpCubesDim, '', vElement, 'S');\r\n\tEndIf;\r\n\r\n\tIf (SUBST(vElement, 1, cCellSecurityPrefixLength + cTpPrefixLength) @= \r\n\t    \t\t(cCellSecurityPrefix | cTpPrefix));\r\n\t\tDimensionElementInsert(cTpCubesDim, '', vElement, 'S');\r\n\tEndIf;\r\n\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\ncTpCubesDimSize = DIMSIZ(cTpCubesDim);\r\nvIndex = 1;\r\nWhile (vIndex <= cTpCubesDimSize);\r\n\tvElement = DIMNM(cTpCubesDim, vIndex);\r\n\tCubeDestroy(vElement);\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\nDimensionDestroy(cTpCubesDim);\r\n\r\n#*** Destroy TP dimensions\r\n\r\ncTpDimensionsDim = 'tptemp_dimensions';\r\nDimensionDestroy(cTpDimensionsDim);\r\nDimensionCreate(cTpDimensionsDim);\r\n\r\ncTpConfigDim = cControlPrefix | 'tp_config';\r\ncTpSystemConfigDim = cControlPrefix | 'tp_system_config';\r\n\r\nvIndex = 1;\r\nWhile (vIndex <= cDimensionsDimSize);\r\n\tvElement = DIMNM(cDimensionsDim, vIndex);\r\n\tvNamePrefix = SUBST(vElement, 1, cTpPrefixLength);\r\n\r\n\tIf (cTpPrefix @= vNamePrefix);\r\n\r\n\t\tIf(vElement @<> cTpConfigDim & vElement @<> cTpSystemConfigDim);\r\n\t\t\tDimensionElementInsert(cTpDimensionsDim, '', vElement, 'S');\r\n\t\tEndIf;\r\n\r\n\tEndIf;\r\n\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\ncTpDimensionsDimSize = DIMSIZ(cTpDimensionsDim);\r\nvIndex = 1;\r\nWhile (vIndex <= cTpDimensionsDimSize);\r\n\tvElement = DIMNM(cTpDimensionsDim, vIndex);\r\n\tDimensionDestroy(vElement);\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\nDimensionDestroy(cTpDimensionsDim);\r\n\r\n#*** Remove TP test users\r\n\r\ncTpUsersDim = 'tptemp_users';\r\nDimensionDestroy(cTpUsersDim);\r\nDimensionCreate(cTpUsersDim);\r\n\r\nvIndex = 1;\r\nWhile (vIndex <= cClientsDimSize);\r\n\tvElement = DIMNM(cClientsDim, vIndex);\r\n\tvNamePrefix = SUBST(vElement, 1, cTpPrefixLength);\r\n\t\r\n\tIf (cTpPrefix @= vNamePrefix);\r\n\t\tDimensionElementInsert(cTpUsersDim, '', vElement, 'S');\r\n\tEndIf;\r\n\t\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\ncTpUsersDimSize = DIMSIZ(cTpUsersDim);\r\nvIndex = 1;\r\nWhile (vIndex <= cTpUsersDimSize);\r\n\tvElement = DIMNM(cTpUsersDim, vIndex);\r\n\tDeleteClient(vElement);\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\nDimensionDestroy(cTpUsersDim);\r\n\r\n#*** Remove TP groups\r\n\r\ncTpGroupsDim = 'tptemp_groups';\r\nDimensionDestroy(cTpGroupsDim);\r\nDimensionCreate(cTpGroupsDim);\r\n\r\nvIndex = 1;\r\nWhile (vIndex <= cGroupsDimSize);\r\n\tvElement = DIMNM(cGroupsDim, vIndex);\r\n\tvNamePrefix = SUBST(vElement, 1, cTpPrefixLength);\r\n\t\r\n\tIf (cTpPrefix @= vNamePrefix);\r\n\t\tDimensionElementInsert(cTpGroupsDim, '', vElement, 'S');\r\n\tEndIf;\r\n\t\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\ncTpGroupsDimSize = DIMSIZ(cTpGroupsDim);\r\nvIndex = 1;\r\nWhile (vIndex <= cTpGroupsDimSize);\r\n\tvElement = DIMNM(cTpGroupsDim, vIndex);\r\n\tDeleteGroup(vElement);\r\n\tvIndex = vIndex + 1;\r\nEnd;\r\n\r\nDimensionDestroy(cTpGroupsDim);\r\n\r\nCubeDestroy(cApplicationCubesCube);\r\n\r\n# clean up tm1 distributed cubes\r\ncPlanningControlCube = cControlPrefix | 'PlanningControl';\r\ncApplicationNamesDim = cControlPrefix | 'ApplicationNames';\r\n\r\nCubeDestroy(cPlanningControlCube);\r\nDimensionDestroy(cApplicationNamesDim);\r\n\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pExecutionId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pControl",
            "Prompt": "",
            "Value": "Y",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_admin_delete_all"
    }
}