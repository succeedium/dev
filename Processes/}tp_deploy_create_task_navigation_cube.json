{
    "Name": "}tp_deploy_create_task_navigation_cube",
    "HasSecurityAccess": false,
    "PrologProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\ncTaskNavigationDim = '}tp_task_navigation_dims}' | pAppId;\r\nIF (DimensionExists(cTaskNavigationDim)=0);\r\nDimensionCreate(cTaskNavigationDim);\r\nEndif;\r\n\r\ndimSeparater = '*';\r\nvPosDim = 0;\r\nvStringToScan = pNavigationDimensions;\r\nvPosDim = SCAN(dimSeparater, vStringToScan);\r\n\r\nWhile (vPosDim >0);\r\n\tvDimName = SUBST(vStringToScan, 1, vPosDim-1);\r\n\tDimensionElementInsert(cTaskNavigationDim, '', vDimName, 'N');\r\n\tvStringToScan = SUBST(vStringToScan, vPosDim +1, LONG(vStringToScan)-vPosDim);\r\n\tvPosDim = SCAN(dimSeparater, vStringToScan);\r\nEnd;\r\n\r\n\r\n\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\ncTaskNavigationCube = '}tp_task_navigations}' | pAppId;\r\ncTaskDimension = '}tp_tasks}' | pAppId;\r\ncTaskNavigationMeasureDim = '}tp_task_navigations';\r\nIF (cubeExists(cTaskNavigationCube) =0);\r\nCubeCreate(cTaskNavigationCube, cTaskDimension, cTaskNavigationDim, cTaskNavigationMeasureDim);\r\nEndif;\r\n\r\n#***\r\n#If there is one navigation dimension only and it is the same as the approval dimension, \r\n#then use the task dimension element to populate the navigation element\r\ncApprovalDIM = ATTRS('}tp_applications', pAppId, 'ApprovalDimension');\r\ncNavElemField = 'NavigationElement';\r\nIF (DIMSIZ(cTaskNavigationDim) =1 & DIMNM(cTaskNavigationDim, 1) @= cApprovalDim);\r\n\tvTotalTasks = DIMSIZ(cTaskDimension);\r\n\tlooper = 1;\r\n\tWhile (looper <= vTotalTasks);\r\n\t\tvNavigationElem = DIMNM(cTaskDimension, looper);\r\n\t\tCellPutS(vNavigationElem, cTaskNavigationCube, vNavigationElem, cApprovalDim, cNavElemField);\r\n\t\tlooper = looper +1;\r\n\tEnd;\r\n\r\nEndif;\r\n",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pExecutionId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pAppId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pNavigationDimensions",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_deploy_create_task_navigation_cube"
    }
}