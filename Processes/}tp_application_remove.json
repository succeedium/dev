{
    "Name": "}tp_application_remove",
    "HasSecurityAccess": false,
    "PrologProcedure": "#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\ncControlPrefix = '';\r\nIf (pControl @= 'Y');\r\n\tcControlPrefix = '}';\r\nEndIf;\r\n\r\n#*** Log File Name\r\ncConfigDim = cControlPrefix | 'tp_config';\r\nIf (DimensionExists(cConfigDim) = 1);\r\n\tcGenerateLog = ATTRS(cConfigDim, 'Generate TI Log', 'String Value');\r\nElse;\r\n\tcGenerateLog = 'N';\r\nEndIf;\r\n\r\ncTM1Process = GetProcessName();\r\nStringGlobalVariable('gPrologLog');\r\nStringGlobalVariable('gEpilogLog');\r\nStringGlobalVariable('gDataLog');\r\n\r\nIF (cGenerateLog @= 'Y' % cGenerateLog @= 'T');\r\nvReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_log_file_names', 'pExecutionId', pExecutionId,\r\n'pProcess', cTM1Process, 'pControl', pControl);\r\nIf (vReturnValue <> ProcessExitNormal());\r\n\tProcessError;\r\nEndIf;\r\nEndif;\r\n\r\ncPrologLog = gPrologLog;\r\ncEpilogLog = gEpilogLog;\r\ncDataLog = gDataLog;\r\ncTM1Log = cPrologLog;\r\n\r\n#***\r\ncApprovalDim =  ATTRS('}tp_applications', pAppId,  'ApprovalDimension');\r\ncApprovalSubset =ATTRS('}tp_applications', pAppId,  'ApprovalSubset');\r\ncIsActive =ATTRS('}tp_applications', pAppId, 'IsActive');\r\ncShadowApprovalDim =ATTRS('}tp_applications', pAppId, 'ApprovalShadowDimension');\r\ncVersionDim = ATTRS('}tp_applications', pAppId, 'VersionDimension');\r\ncSecurityMethod = ATTRS('}tp_applications', pAppId, 'SecurityMethod');\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, 'get application attributes', cApprovalDim, cApprovalSubset, cIsActive,cShadowApprovalDim,cVersionDim);\r\nEndIf;\r\n\r\n\r\n#*** Log Parameters\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Parameters:', pExecutionId, pAppId, pControl);\r\nEndIf;\r\n\r\ncApplicationsDim = cControlPrefix | 'tp_applications';\r\ncIntermediateAppDim = '}tp_intermediate_security_applications';\r\nIf (DIMIX(cApplicationsDim, pAppId) <> 0);\r\n\r\n\t#***\r\n\t\r\n\tIf (cGenerateLog @= 'Y');\r\n\t\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Release all data reservations', pAppId);\r\n\tEndIf;\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_reserve_release_all', 'pExecutionId', pExecutionId, \r\n\t\t\t'pAppId', pAppId, 'pControl', pControl);\r\n\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\tProcessError;\r\n\tEndIf;\r\n\r\n\t#***Remove all persisted views for this application\r\n\tvReturnValue = ExecuteProcess('}tp_reset_views',\r\n\t\t'pExecutionId', pExecutionId, 'pAppId', pAppId);\r\n\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\tProcessError;\r\n\tEndIf;\r\n\t\t\r\n\t#***\r\n\tIf (cApprovalDim @<> '');\r\n\r\n\t\tcPermissionCube = cControlPrefix | 'tp_application_permission}' | pAppId;\r\n\t\tcCellSecurityCube = '}CellSecurity_' | cPermissionCube;\r\n\t\r\n\t\tIf (cGenerateLog @= 'Y');\r\n\t\t\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Destroy permissions cubes');\r\n\t\tEndIf;\r\n\t\r\n\t\tCubeDestroy(cPermissionCube);\r\n\t\tCubeDestroy(cCellSecurityCube);\r\n\t\r\n\t\tcStateCube = cControlPrefix | 'tp_application_state}' | pAppId;\r\n\t\tCubeDestroy(cStateCube);\r\n\r\n\t\t#***\r\n\t\tcApprovalElementSecurityCube = '}ElementSecurity_' | cShadowApprovalDim;\r\n\t\tCubeDestroy(cApprovalElementSecurityCube);\r\n\r\n\t\tIF (cSecurityMethod @= 'ELEMENT_SECURITY');\r\n\t\t\tcElementSecurityCubeOnApproval = '}ElementSecurity_' | cApprovalDim;\r\n\t\t\tCubeDestroy(cElementSecurityCubeOnApproval);\r\n\t\tEndif;\r\n\r\n\t\t#***Remove Shadow approval dimension\r\n\t\tDimensionDestroy(cShadowApprovalDim);\r\n\r\n\t\tcSecurityCube = cControlPrefix | 'tp_application_security}' | pAppId;\r\n\t\tCubeDestroy(cSecurityCube);\r\n\t\r\n\t\tcSecurityUpdateCube = cControlPrefix | 'tp_application_security_update}' | pAppId;\r\n\t\tCubeDestroy(cSecurityUpdateCube);\r\n\r\n\t\t#***Remove task navigation cube\r\n\t\tcTaskNavigationCube = '}tp_task_navigations}' | pAppId;\r\n\t\tCubeDestroy(cTaskNavigationCube);\r\n\r\n\t\t#***Remove task navigation dimension\r\n\t\tcTaskNavigationDim = '}tp_task_navigation_dims}' | pAppId;\r\n\t\tDimensionDestroy(cTaskNavigationDim);\r\n\r\n\t\t#Finally, remove element security cube, and IM element security cube  for an approval dimension \r\n\t\t#if no other applications are using the same approval dimension\r\n\t\tvTotalApplications = DIMSIZ(cApplicationsDim);\r\n\t\tvDeleteElementSecurity = 'Y';\r\n\t\tlooper =1;\r\n\t\tWhile (looper <= vTotalApplications);\r\n\t\t\tvOtherAppId = DIMNM(cApplicationsDim, looper);\r\n\t\t\tIF (vOtherAppId @<> pAppId);\r\n\t\t\t\tvOtherAppApprovalDim =ATTRS('}tp_applications', vOtherAppId,  'ApprovalDimension');\r\n\t\t\t\tIF (vOtherAppApprovalDim @= cApprovalDim);\r\n\t\t\t\t\tvDeleteElementSecurity = 'N';\r\n\t\t\t\t\tlooper = vTotalApplications;\r\n\t\t\t\tEndif;\r\n\r\n\t\t\tEndif;\r\n\t\t\tlooper = looper +1;\r\n\t\tEnd;\r\n\r\n\t\tIF (vDeleteElementSecurity @= 'Y');\r\n\t\t\tvElementSecurityOnApprovalDim = '}ElementSecurity_' | cApprovalDim;\r\n\t\t\tIF (CubeExists(vElementSecurityOnApprovalDim)>0);\r\n\t\t\t\tCubeDestroy(vElementSecurityOnApprovalDim);\r\n\t\t\tEndif;\r\n\t\t\tvIMElementSecurityOnApprovalDim = '}tp_intermediate_ElementSecurity}' | cApprovalDim;\r\n\t\t\tIF (CubeExists(vIMElementSecurityOnApprovalDim)>0);\r\n\t\t\t\tCubeDestroy(vIMElementSecurityOnApprovalDim);\r\n\t\t\tEndif;\r\n\t\tEndif;\r\n\r\n\tEndIf;\r\n\r\n\t#***Remove application related cubes\r\n\tcApplicationCubesCube = cControlPrefix | 'tp_application_cubes';\r\n\t\r\n\ttotalCubes = DIMSIZ('}Cubes');\r\n\tindexCube = totalCubes;\r\n\t\r\n\tWhile (indexCube >= 1);\r\n\t\tcCubeName = DIMNM('}Cubes', indexCube);\r\n\t\r\n\t\tcIsAppCube = CellGetS(cApplicationCubesCube, pAppId, cCubeName);\r\n\r\n\t\tIF (cIsAppCube @= 'A' % (cIsAppCube @<> '' & cApprovalDim @= ''));\r\n\t\t\tvReturnValue = ExecuteProcess('}tp_deploy_app_cubes_cleanup', 'pExecutionId', pExecutionId,'pAppId', pAppId, 'pCubeName', cCubeName);\r\n\t\t\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\t\t\tProcessError;\r\n\t\t\tEndIf;\r\n\t\tEndif;\r\n\t\t\r\n\t\tindexCube = indexCube - 1;\r\n\tEnd;\r\n\r\n\t#***\r\n\t\r\n\tIf (cGenerateLog @= 'Y');\r\n\t\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Remove application node: ' | pAppId);\r\n\tEndIf;\r\n\r\n\tDimensionElementDelete(cApplicationsDim, pAppId);\r\n\tDimensionElementDelete(cIntermediateAppDim, pAppId);\r\n\r\n\t#*** Remove sandboxes associated with the application\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_delete_sandboxes',\r\n\t\t'pExecutionId', pExecutionId, 'pAppId', pAppId, 'pControl', pControl);\r\n\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\tProcessError;\r\n\tEndIf;\r\n\r\n\t#Remove all blb files created by this applications\r\n\tvBlbFile = 'tp_AdminBkup_' | pAppId | '.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = 'tp_SecurityBkup_' | pAppId | '.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = 'tp_ModelBkup_' | pAppId |  '.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = '}tp_tasks}' | pAppId | '_weighted_struct.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = 'tp_app_approval_hierarchy}' | pAppId | '.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = 'tp_app_full_security}' | pAppId | '.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = 'tp_app_full_security}' | pAppId | '_alias.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\tvBlbFile = 'tp_app_security}' | pAppId | '.blb';\r\n\tAsciiDelete(vBlbFile);\r\n\r\n\t#**remove control subset filter\r\n\t#vDimensions = '}Dimensions';\r\n\t#vTotalDimensions = DIMSIZ(vDimensions);\r\n\t#looper = vTotalDimensions;\r\n\t#\r\n\t#While (looper >= 1);\r\n\t#\tvDimension = DIMNM(vDimensions, looper);\r\n\t#\tIF (SUBST(vDimension, 1,1) @<> '}');\r\n\t#\t\tvSubset = 'tp_' | pAppId;\r\n\t#\t\tIF (SubsetExists(vDimension, vSubset) >0);\r\n\t#\t\t\tSubsetDestroy(vDimension, vSubset);\r\n\t#\t\tEndif;\r\n\t#\tEndif;\r\n\t#\tlooper = looper -1;\r\n\t#End;\r\nElse;\r\n\r\n\tIf (cGenerateLog @= 'Y');\r\n\t\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Application does not exist: ' | pAppId);\r\n\tEndIf;\r\n\r\nEndIf;\r\n\r\n#*** No error\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'The end has been reached.');\r\nEndIf;\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pExecutionId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pAppId",
            "Prompt": "",
            "Value": "MyApp",
            "Type": "String"
        },
        {
            "Name": "pControl",
            "Prompt": "",
            "Value": "N",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_application_remove"
    }
}