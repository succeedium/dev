{
    "Name": "}tp_rights_update_RDCLS_static_rights",
    "HasSecurityAccess": false,
    "PrologProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\n#****String Caching Workaround\r\n#This TI can be removed once String cache is implemented on TM1\r\n\r\n#****\r\n\r\ncIMRDCLSCube = '}tp_intermediate_RDCLS}' | pCube;\r\ncGroupsDim = pGroupsDim;\r\ncAllApplications = 'all_applications';\r\n\r\nversionIndex = 0;\r\napprovalIndex = 0;\r\ndimensionIndex = 1;\r\nWhile (dimensionIndex > 0 ); \r\n\tcCubeDimensionName = TABDIM(pCube, dimensionIndex);\r\n\tIf (cCubeDimensionName @= '');\r\n\t\tdimensionIndex = -1;\r\n\tElse;\r\n\t\tIF (cCubeDimensionName @=pVersionDim);\r\n\t\t\tversionIndex = dimensionIndex;\r\n\t\tEndif;\r\n\t\t\t\t\r\n\t\tIF (cCubeDimensionName @= pApprovalDim );\r\n\t\t\tapprovalIndex =dimensionIndex ;\r\n\t\tEndif;\r\n\r\n\tEndIf;\r\n\r\n\tdimensionIndex = dimensionIndex + 1;\r\nEnd;\r\n\r\nIF (versionIndex < approvalIndex);\r\n\tversionFirst = 'Y';\r\nEndif;\r\n\r\n#*Update RD cell security cubes\r\nIF (CubeExists(cIMRDCLSCube) >0);\r\nvTotalGroups = DIMSIZ(cGroupsDim);\r\nvGroupLooper = 1;\r\nWhile (vGroupLooper <= vTotalGroups);\r\n\tvGroup = DIMNM(cGroupsDim, vGroupLooper);\r\n\r\n\tvTotalNodes = SubsetGetSize(pApprovalDim, pUpdateSubset);\r\n\tvNodeLooper = 1;\r\n\tWhile (vNodeLooper <= vTotalNodes);\r\n\t\tvApprovalNode = SubsetGetElementName(pApprovalDim, pUpdateSubset, vNodeLooper);\r\n\t\tvFinalCellSecurity ='NONE';\r\n\r\n\t\tIF (versionIndex >0);\r\n\t\t\tvTotalVersions = DIMSIZ(pVersionDim);\r\n\t\t\tvVersionLooper = 1;\r\n\t\t\tWhile (vVersionLooper <= vTotalVersions);\r\n\t\t\t\tvVersion = DIMNM(pVersionDim, vVersionLooper);\r\n\t\t\t\tIF (approvalIndex >0)\t;\t\r\n\t\t\t\t\tIF (versionFirst @= 'Y');\r\n\t\t\t\t\t\tvFinalCellSecurity=CellGetS(cIMRDCLSCube, vVersion, vApprovalNode, vGroup,cAllApplications,'Rights' );\r\n\t\t\t\t\t\tvCurrentCellSecurity = CellGetS(cIMRDCLSCube, vVersion, vApprovalNode,vGroup,cAllApplications, 'StaticRights');\r\n\t\t\t\t\t\tIF (vFinalCellSecurity @<> vCurrentCellSecurity);\r\n\t\t\t\t\t\t\tCellPutS(vFinalCellSecurity, cIMRDCLSCube, vVersion, vApprovalNode,vGroup,cAllApplications, 'StaticRights');\r\n\t\t\t\t\t\tEndif;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tElse;\r\n\t\t\t\t\t\tvFinalCellSecurity=CellGetS(cIMRDCLSCube, vApprovalNode, vVersion,vGroup,cAllApplications, 'Rights' );\r\n\t\t\t\t\t\tvCurrentCellSecurity = CellGetS(cIMRDCLSCube, vApprovalNode, vVersion,vGroup,cAllApplications, 'StaticRights');\r\n\t\t\t\t\t\tIF (vFinalCellSecurity @<> vCurrentCellSecurity);\r\n\t\t\t\t\t\t\tCellPutS(vFinalCellSecurity, cIMRDCLSCube, vApprovalNode, vVersion,vGroup,cAllApplications,'StaticRights');\r\n\t\t\t\t\t\tEndif;\r\n\t\t\t\t\tEndif;\r\n\t\t\t\tElse;\r\n\t\t\t\t\tvFinalCellSecurity=CellGetS(cIMRDCLSCube,vVersion, vGroup,cAllApplications, 'Rights' );\r\n\t\t\t\t\tvCurrentCellSecurity = CellGetS(cIMRDCLSCube,vVersion, vGroup,cAllApplications,'StaticRights' );\r\n\t\t\t\t\tIF (vFinalCellSecurity @<>vCurrentCellSecurity);\r\n\t\t\t\t\t\tCellPutS(vFinalCellSecurity, cIMRDCLSCube,vVersion, vGroup,cAllApplications, 'StaticRights');\r\n\t\t\t\t\tEndif;\r\n\t\t\t\tEndif;\r\n\t\t\t\tvVersionLooper = vVersionLooper +1;\r\n\t\t\tEnd;\r\n\r\n\t\tElseIf (versionIndex = 0 & approvalIndex >0);\r\n\t\t\tvFinalCellSecurity=CellGetS(cIMRDCLSCube,vApprovalNode, vGroup,cAllApplications, 'Rights' );\r\n\t\t\tvCurrentCellSecurity = CellGetS(cIMRDCLSCube,vApprovalNode, vGroup,cAllApplications, 'StaticRights');\r\n\t\t\tIF (vFinalCellSecurity @<>vCurrentCellSecurity);\r\n\t\t\t\tCellPutS(vFinalCellSecurity, cIMRDCLSCube,vApprovalNode, vGroup,cAllApplications, 'StaticRights');\r\n\t\t\tEndif;\r\n\t\tEndif;\r\n\t\tvNodeLooper = vNodeLooper  +1;\t\t\r\n\tEnd;\r\n\tvGroupLooper = vGroupLooper +1;\r\nEnd;\r\n\r\nEndif;\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pExecutionId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pAppId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pCube",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pApprovalDim",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pUpdateSubset",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pVersionDim",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pGroupsDim",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_rights_update_RDCLS_static_rights"
    }
}