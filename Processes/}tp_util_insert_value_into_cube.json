{
    "Name": "}tp_util_insert_value_into_cube",
    "HasSecurityAccess": false,
    "PrologProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\n\r\n#*** Calculate dimension count\r\ncDim1 = '';\r\ncDim2 = '';\r\ncDim3 = '';\r\ncDim4 = '';\r\n\r\nvIndex = 1;\r\nWhile (vIndex <> 0);\r\n\tvDim = TABDIM(pCube, vIndex);\r\n\t\r\n\tIf (vIndex = 1);\r\n\t\tcDim1 = vDim;\r\n\tElseIf (vIndex = 2);\r\n\t\tcDim2 = vDim;\r\n\tElseIf (vIndex = 3);\r\n\t\tcDim3 = vDim;\r\n\tElseIf (vIndex = 4);\r\n\t\tcDim4 = vDim;\r\n\tEndIf;\r\n\t\r\n\tIf (vDim @<> '');\r\n\t\tvIndex = vIndex + 1;\r\n\tElse;\r\n\t\tcDimCount = vIndex - 1;\r\n\t\tvIndex = 0;\r\n\tEndIf;\r\nEnd;\r\n\r\n\r\n#*** Check elements\r\nIf (cDimCount = 2);\r\n\tIf (pElem1 @= '' % pElem2 @= '');\r\n\t\tProcessError;\r\n\tEndIf;\r\nElseIf (cDimCount = 3);\r\n\tIf (pElem1 @= '' % pElem2 @= '' % pElem3 @= '');\r\n\t\tProcessError;\r\n\tEndIf;\r\nElseIf (cDimCount = 4);\r\n\tIf (pElem1 @= '' % pElem2 @= '' % pElem3 @= '' % pElem4 @= '');\r\n\t\tProcessError;\r\n\tEndIf;\r\nElse;\r\n\tProcessError;\r\nEndIf;\r\n\r\n\r\n#*** If element is '?', the element is a wild card and it means any element.\r\nIf (cDimCount = 2);\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & DIMIX(cDim2, pElem2) <> 0);\r\n\t\tIf (DTYPE(cDim2, pElem2) @= 'S');\r\n\t\t\tCellPutS(pValue, pCube, pElem1, pElem2);\r\n\t\tElse;\r\n\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, pElem2);\r\n\t\tEndIf;\r\n\tEndIf;\r\n\t\r\n\tIf (pElem1 @= '?' & DIMIX(cDim2, pElem2) <> 0);\r\n\t\tvDimSize = DIMSIZ(cDim1);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim1, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim2, pElem2) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, vElem, pElem2);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, vElem, pElem2);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & pElem2 @= '?');\r\n\t\tvDimSize = DIMSIZ(cDim2);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim2, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim2, vElem) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, pElem1, vElem);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, vElem);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\nElseIf (cDimCount = 3);\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & DIMIX(cDim2, pElem2) <> 0 & DIMIX(cDim3, pElem3) <> 0);\r\n\t\tIf (DTYPE(cDim3, pElem3) @= 'S');\r\n\t\t\tCellPutS(pValue, pCube, pElem1, pElem2, pElem3);\r\n\t\tElse;\r\n\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, pElem2, pElem3);\r\n\t\tEndIf;\r\n\tEndIf;\r\n\t\r\n\tIf (pElem1 @= '?' & DIMIX(cDim2, pElem2) <> 0 & DIMIX(cDim3, pElem3) <> 0);\r\n\t\tvDimSize = DIMSIZ(cDim1);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim1, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim3, pElem3) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, vElem, pElem2, pElem3);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, vElem, pElem2, pElem3);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & pElem2 @= '?' & DIMIX(cDim3, pElem3) <> 0);\r\n\t\tvDimSize = DIMSIZ(cDim2);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim2, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim3, pElem3) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, pElem1, vElem, pElem3);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, vElem, pElem3);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & DIMIX(cDim2, pElem2) <> 0 & pElem3 @= '?');\r\n\t\tvDimSize = DIMSIZ(cDim3);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim3, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim3, vElem) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, pElem1, pElem2, vElem);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, pElem2, vElem);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\nElseIf (cDimCount = 4);\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & DIMIX(cDim2, pElem2) <> 0 & DIMIX(cDim3, pElem3) <> 0 & DIMIX(cDim4, pElem4) <> 0);\r\n\t\tIf (DTYPE(cDim4, pElem4) @= 'S');\r\n\t\t\tCellPutS(pValue, pCube, pElem1, pElem2, pElem3, pElem4);\r\n\t\tElse;\r\n\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, pElem2, pElem3, pElem4);\r\n\t\tEndIf;\r\n\tEndIf;\r\n\t\r\n\tIf (pElem1 @= '?' & DIMIX(cDim2, pElem2) <> 0 & DIMIX(cDim3, pElem3) <> 0 & DIMIX(cDim4, pElem4) <> 0);\r\n\t\tvDimSize = DIMSIZ(cDim1);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim1, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim4, pElem4) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, vElem, pElem2, pElem3, pElem4);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, vElem, pElem2, pElem3, pElem4);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & pElem2 @= '?' & DIMIX(cDim3, pElem3) <> 0 & DIMIX(cDim4, pElem4) <> 0);\r\n\t\tvDimSize = DIMSIZ(cDim2);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim2, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim4, pElem4) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, pElem1, vElem, pElem3, pElem4);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, vElem, pElem3, pElem4);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & DIMIX(cDim2, pElem2) <> 0 & pElem3 @= '?' & DIMIX(cDim4, pElem4) <> 0);\r\n\t\tvDimSize = DIMSIZ(cDim3);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim3, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim4, pElem4) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, pElem1, pElem2, vElem, pElem4);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, pElem2, vElem, pElem4);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\n\t\r\n\tIf (DIMIX(cDim1, pElem1) <> 0 & DIMIX(cDim2, pElem2) <> 0 & DIMIX(cDim3, pElem3) <> 0 & pElem4 @= '?');\r\n\t\tvDimSize = DIMSIZ(cDim4);\r\n\t\tvIndex = 1;\r\n\t\twhile (vIndex <= vDimSize);\r\n\t\t\tvElem = DIMNM(cDim4, vIndex);\r\n\t\t\t\r\n\t\t\tIf (DTYPE(cDim4, vElem) @= 'S');\r\n\t\t\t\tCellPutS(pValue, pCube, pElem1, pElem2, pElem3, vElem);\r\n\t\t\tElse;\r\n\t\t\t\tCellPutN(StringToNumber(pValue), pCube, pElem1, pElem2, pElem3, vElem);\r\n\t\t\tEndIf;\r\n\t\t\t\r\n\t\t\tvIndex = vIndex + 1;\r\n\t\tEnd;\r\n\tEndIf;\r\nElse;\r\n\tProcessError;\r\nEndIf;\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pCube",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pValue",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pElem1",
            "Prompt": "",
            "Value": "",
            "Type": "String"
        },
        {
            "Name": "pElem2",
            "Prompt": "",
            "Value": "",
            "Type": "String"
        },
        {
            "Name": "pElem3",
            "Prompt": "",
            "Value": "",
            "Type": "String"
        },
        {
            "Name": "pElem4",
            "Prompt": "",
            "Value": "",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_util_insert_value_into_cube"
    }
}