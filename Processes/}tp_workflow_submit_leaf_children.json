{
    "Name": "}tp_workflow_submit_leaf_children",
    "HasSecurityAccess": true,
    "PrologProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009, 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\ncControlPrefix = '';\r\nIf (pControl @= 'Y');\r\ncControlPrefix = '}';\r\nEndIf;\r\n\r\n#*** Log File Name\r\ncConfigDim = cControlPrefix | 'tp_config';\r\nIf (DimensionExists(cConfigDim) = 1);\r\n\tcGenerateLog = ATTRS(cConfigDim, 'Generate TI Log', 'String Value');\r\nElse;\r\n\tcGenerateLog = 'N';\r\nEndIf;\r\n\r\ncTM1Process = GetProcessName();\r\nStringGlobalVariable('gPrologLog');\r\nStringGlobalVariable('gEpilogLog');\r\nStringGlobalVariable('gDataLog');\r\n\r\nIF (cGenerateLog @= 'Y' % cGenerateLog @= 'T');\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_log_file_names', 'pExecutionId', pExecutionId,\r\n\t'pProcess', cTM1Process, 'pControl', pControl);\r\n\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\tProcessError;\r\n\tEndIf;\r\nEndif;\r\n\r\ncPrologLog = gPrologLog;\r\ncEpilogLog = gEpilogLog;\r\ncDataLog = gDataLog;\r\ncTM1Log = cPrologLog;\r\n\r\n#***\r\ncApprovalDim =  ATTRS('}tp_applications', pAppId,  'ApprovalDimension');\r\ncApprovalSubset =ATTRS('}tp_applications', pAppId,  'ApprovalSubset');\r\ncIsActive =ATTRS('}tp_applications', pAppId, 'IsActive');\r\ncShadowApprovalDim =ATTRS('}tp_applications', pAppId, 'ApprovalShadowDimension');\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, 'get application attributes', cApprovalDim, cApprovalSubset, cIsActive,cShadowApprovalDim );\r\nEndIf;\r\n\r\n\r\nIf (cIsActive @<> 'Y');\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_error_update_error_cube', \r\n\t\t'pGuid', pExecutionId, \r\n\t\t'pProcess', cTM1Process, \r\n\t\t'pErrorCode', 'TI_APP_NOT_ACTIVE',\r\n\t\t'pErrorDetails', pAppId,\r\n\t\t'pControl', pControl);\r\n\t\r\n\tProcessError;\r\nEndIf;\r\n\r\n\r\n\r\n\r\n#*** Log Parameters\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Parameters:', pExecutionId, pTime, pAppId, pNode, pControl);\r\nEndIf;\r\n\r\n#***\r\n\r\ncStateCube = cControlPrefix | 'tp_application_state}' | pAppId;\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, 'Check state cube: ' | cStateCube);\r\nEndIf;\r\n\r\nIf(CubeExists(cStateCube) = 0);\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_error_update_error_cube',\r\n\t\t'pGuid', pExecutionId,\r\n\t\t'pProcess', cTM1Process,\r\n\t\t'pErrorCode', 'TI_CUBE_NOT_EXIST',\r\n\t\t'pErrorDetails', cStateCube,\r\n\t\t'pControl', pControl);\r\n\r\n\tProcessError;\r\nEndIf;\r\n\r\n#***\r\n\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, 'Check node: ' | pNode);\r\nEndIf;\r\n\r\nIf (DIMIX(cShadowApprovalDim, pNode) = 0);\r\n\tProcessError;\r\nEndIf;\r\n\r\n\r\n\r\n#***\r\npNode = DimensionElementPrincipalName(cShadowApprovalDim, pNode);\r\n\r\n#can not be a leaf node\r\nIf (DTYPE(cShadowApprovalDim, pNode) @= 'N');\r\n\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_error_update_error_cube',\r\n\t\t'pGuid', pExecutionId,\r\n\t\t'pProcess', cTM1Process,\r\n\t\t'pErrorCode', 'TI_WRONG_NODE_TYPE',\r\n\t\t'pErrorDetails', 'SUBMIT' | ', ' | pNode,\r\n\t\t'pControl', pControl);\r\n\r\n\tProcessError;\r\n\r\nENDIF;\r\n\t\r\n#*** Escape the node to ensure valid MDX\r\nStringGlobalVariable('gEscapedId');\r\nvReturnValue = ExecuteProcess(cControlPrefix | 'tp_util_escape_id', \r\n\t'pExecutionId', pExecutionId, 'pNode', pNode, 'pControl', pControl);\r\nIf (vReturnValue <> ProcessExitNormal());\r\n\tProcessError;\r\nEndIf;\r\nIf (cGenerateLog @= 'Y');\r\n\tTextOutput(cTM1Log, TIMST(NOW, '\\Y-\\m-\\d \\h:\\i:\\s'), 'Escaped Node name: ' | gEscapedId);\r\nEndIf;\r\n\r\n###Take care of all leaf nodes in the package\r\nvMDX = '{INTERSECT(TM1FILTERBYLEVEL({DESCENDANTS([' | cShadowApprovalDim | '].[' | gEscapedId | ']) }, 0),\r\nTM1SUBSETTOSET([' | cShadowApprovalDim | '],\"' | cApprovalSubset | '\")), [' | cShadowApprovalDim | '].[' | gEscapedId | ']}';\r\nvSubsetLeafChildren = 'sumbitChildren_onConsolidation_' | pExecutionId;\r\nIF (SubsetExists(cShadowApprovalDim, vSubsetLeafChildren) <>0);\r\n\tSubsetDestroy(cShadowApprovalDim, vSubsetLeafChildren);\r\nENDIF;\r\nSubsetCreateByMdx(vSubsetLeafChildren, vMDX);\r\nSubsetElementInsert(cShadowApprovalDim, vSubsetLeafChildren, pNode, 0);\r\nvSize = SubsetGetSize(cShadowApprovalDim, vSubsetLeafChildren);\r\nvUpdateAncestorState = 'Y';\r\nIF (vSize > 100);\r\n\tvUpdateAncestorState = 'N';\r\nEndif;\r\n\r\nlooper = vSize;\r\nvLeafOwnedAtRightLevel =0;\r\nWhile (looper >=1);\r\n\tvLeafChild = SubsetGetElementName(cShadowApprovalDim, vSubsetLeafChildren, looper);\r\n\r\n\t#leaf node, not the dummy node\r\n\t#IF (1)\r\n\tIF (vLeafChild @<> pNode);\r\n\r\n\t\t#*** Check node state\r\n\t\tcInProgress = '2';\r\n\t\tcState = 'State';\r\n\t\tcOwnershipNode = 'TakeOwnershipNode';\r\n\t\tcOwnerId = 'CurrentOwnerId';\r\n\t\tvLeafState = CellGetS(cStateCube, vLeafChild, cState);\r\n\t\tvTakeOwnershipNode =CellGetS(cStateCube, vLeafChild, cOwnershipNode);\r\n\t\tvOwnerId = CellGetS(cStateCube, vLeafChild, cOwnerId);\r\n\r\n\t\t#IF (1.1)\r\n\t\t#Three conditions:\r\n\t\t#1. leaf node must be InProgress state\r\n\t\t#2. Submit must happen from the take ownership node\r\n\t\t#3. Current user must own the leaf node\r\n\t\tIF (vLeafState @= cInProgress & vTakeOwnershipNode @= pNode & vOwnerId @=TM1User);\r\n\r\n\t\t\t#*** Check user  privilege\r\n\t\t\tStringGlobalVariable('gSubmit');\r\n\t\t\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_get_user_permissions',\r\n\t\t\t\t'pGuid', pExecutionId, 'pApplication', pAppId, 'pNode', vLeafChild, 'pUser', TM1User, 'pControl', pControl);\r\n\t\t\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\t\t\tProcessError;\r\n\t\t\tEndIf;\r\n\r\n\t\t\t#IF (1.1.1)\r\n\t\t\tIf (gSubmit @= 'T');\r\n\r\n\t\t\t\tvLeafOwnedAtRightLevel = vLeafOwnedAtRightLevel +1;\r\n\r\n\t\t\t\t#*** Remove being-edited status\r\n\r\n\t\t\t\tcBeingEdited = 'BeingEdited';\r\n\t\t\t\tcOffline = 'Offline';\r\n\t\t\t\tCellPutS('', cStateCube, vLeafChild, cBeingEdited);\r\n\t\t\t\tCellPutS('', cStateCube, vLeafChild, cOffline);\r\n\r\n\t\t\t\tcStartEditingDate = 'StartEditingDate';\r\n\t\t\t\tCellPutS('', cStateCube, vLeafChild, cStartEditingDate);\r\n\r\n\t\t\t\t#*** Change state\r\n\t\t\t\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_workflow_change_node_state', 'pExecutionId', pExecutionId,\r\n\t\t\t\t\t'pTime', pTime, 'pAppId', pAppId, 'pNode', vLeafChild, 'pPrivilege', 'SUBMIT', 'pUpdateAncestorState', vUpdateAncestorState,'pControl', pControl);\r\n\t\t\t\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\t\t\t\tProcessError;\r\n\t\t\t\tEndIf;\r\n\r\n\t\t\t\t#Lock this leaf node\r\n\r\n\t\t\t\tcApplicationCubesCube = '}tp_application_cubes';\r\n\t\t\t\ttotalCubes = DIMSIZ('}Cubes');\r\n\t\t\t\tindexCube = 1;\r\n\r\n\t\t\t\tWhile (indexCube <= totalCubes);\r\n\t\t\t\t\tcCubeName = DIMNM('}Cubes', indexCube);\r\n\t\t\t\t\tcIsAppCube = CellGetS(cApplicationCubesCube, pAppId, cCubeName);\r\n\r\n\t\t\t\t\tIf (cIsAppCube @= 'A');\r\n\t\t\t\t\t\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_workflow_util_lock_cube_slices', 'pExecutionId', pExecutionId, 'pAppId', pAppId, \r\n\t\t\t\t\t\t\t'pCube', cCubeName, 'pApprovalDim', cApprovalDim, 'pNode', vLeafChild, 'pLock', 'Y','pControlDim','','pControlWritableSlices', '');\r\n\t\t\t\t\t\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\t\t\t\t\t\tProcessError;\r\n\t\t\t\t\t\tEndIf;\r\n\t\t\t\t\tEndIf;\r\n\t\t\t\t\tindexCube = indexCube +1;\r\n\t\t\t\tEnd;\r\n\r\n\t\t\t#IF (1.1.1)\r\n\t\t\tEndif;\r\n\r\n\t\t#IF (1.1)\r\n\t\tENDIF;\r\n\r\n\t#IF (1)\r\n\tENDIF;\r\n\r\n\tlooper = looper -1;\r\n\r\nEND;\r\n\r\nIf (vLeafOwnedAtRightLevel =0);\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_error_update_error_cube', \r\n\t\t'pGuid', pExecutionId, \r\n\t\t'pProcess', cTM1Process, \r\n\t\t'pErrorCode', 'TI_NO_LEAF_OWNED_AT_RIGHT_LEVEL',\r\n\t\t'pErrorDetails', 'SUBMITLEAFCHILDREN' | ', ' | pNode,\r\n\t\t'pControl', pControl);\r\n\t\t\r\n\tProcessError;\r\nEndIf;\r\n\r\n###Remove DR from consolidation\r\nvReturnValue = ExecuteProcess(cControlPrefix | 'tp_reserve_slice', 'pExecutionId', pExecutionId, \r\n\t\t'pAppId', pAppId, 'pNode', pNode, 'pApprovalDim', cApprovalDim, 'pReserve', 'N', 'pUser',TM1User, 'pControl', pControl);\r\nIf (vReturnValue <> ProcessExitNormal());\r\n\tProcessError;\r\nEndIf;\r\n\r\n#If we didn't update ancestors' state for an individual leaf node, we must update all consolidated nodes now\r\nIF (vUpdateAncestorState @= 'N');\r\n\tvReturnValue = ExecuteProcess(cControlPrefix | 'tp_update_state_cube', 'pGuid', pExecutionId,'pAppId', pAppId, 'pUpdateLeafState', 'N', 'pControl', pControl);\r\n\t\t\t\t\t\t\t\t\r\n\tIf (vReturnValue <> ProcessExitNormal());\r\n\t\tProcessError;\r\n\tEndIf;\r\nEndif;\r\n\r\n#*** No error\r\n\r\nIf (cGenerateLog @= 'Y');\r\nTextOutput(cTM1Log, 'The end has been reached.');\r\nEndIf;\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2008, 2009\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\nIF (SubsetExists(cShadowApprovalDim, vSubsetLeafChildren) <>0);\r\nSubsetDestroy(cShadowApprovalDim, vSubsetLeafChildren);\r\nENDIF;\r\n",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pExecutionId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pTime",
            "Prompt": "",
            "Value": "0",
            "Type": "String"
        },
        {
            "Name": "pAppId",
            "Prompt": "",
            "Value": "MyApp",
            "Type": "String"
        },
        {
            "Name": "pNode",
            "Prompt": "",
            "Value": "NA",
            "Type": "String"
        },
        {
            "Name": "pControl",
            "Prompt": "",
            "Value": "N",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_workflow_submit_leaf_children"
    }
}