{
    "Name": "}tp_util_convert_dynamic_subset_to_static",
    "HasSecurityAccess": false,
    "PrologProcedure": "\r\n\r\n#################################################################\r\n## IBM Confidential\r\n##\r\n## OCO Source Materials\r\n##\r\n## BI and PM: pmpsvc\r\n##\r\n## (C) Copyright IBM Corp. 2010\r\n##\r\n## The source code for this program is not published or otherwise\r\n## divested of its trade secrets, irrespective of what has been\r\n## deposited with the U.S. Copyright Office.\r\n#################################################################\r\n\r\n\r\n\r\n# Make sure dimension and subset exist\r\nIf (DimensionExists(pDim) = 0);\r\nProcessError;\r\nEndIf;\r\n\r\nIf (SubsetExists(pDim, pSubset) = 0);\r\nProcessError;\r\nEndIf;\r\n \r\nIf (SubsetGetSize(pDim, pSubset) = 0);\r\n\r\n#do nothing\r\nelse;\r\n\r\n# Get the first element from subset\r\ncFirstElem = SubsetGetElementName(pDim, pSubset, 1);\r\n\r\n# Insert this element back to the subset at the end\r\nSubsetElementInsert(pDim, pSubset, cFirstElem, SubsetGetSize(pDim, pSubset) + 1);\r\n\r\n# Remove this inserted element\r\nSubsetElementDelete(pDim, pSubset, SubsetGetSize(pDim, pSubset));\r\n\r\nENdIf;\r\n",
    "MetadataProcedure": "",
    "DataProcedure": "",
    "EpilogProcedure": "",
    "DataSource": {
        "Type": "None"
    },
    "Parameters": [
        {
            "Name": "pExecutionId",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pDim",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        },
        {
            "Name": "pSubset",
            "Prompt": "",
            "Value": "None",
            "Type": "String"
        }
    ],
    "Variables": [],
    "Attributes": {
        "Caption": "}tp_util_convert_dynamic_subset_to_static"
    }
}